<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:redisson="http://redisson.org/schema/redisson"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://redisson.org/schema/redisson classpath:org/redisson/spring/support/redisson-1.3.xsd
">

    <!-- Redis Spring配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.jedisPoolConfig.maxTotal}" />
        <property name="minIdle" value="${redis.jedisPoolConfig.minIdle}" />
        <property name="maxIdle" value="${redis.jedisPoolConfig.maxIdle}" />
        <property name="testOnBorrow" value="${redis.jedisPoolConfig.testOnBorrow}" />
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.jedisConnectionFactory.host}"
          p:port="${redis.jedisConnectionFactory.port}"
          p:password="${redis.jedisConnectionFactory.password}"
          p:database="${redis.jedisConnectionFactory.database}"
          p:use-pool="${redis.jedisConnectionFactory.usePool}"
          p:poolConfig-ref="jedisPoolConfig"
    />

    <bean id="stringRedisSerializer"  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="bytesSerializer" class="org.valkyrja2.component.redis.BytesRedisSerializer" />
    <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <!-- 序列化方法 -->
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="hashKeySerializer" ref="stringRedisSerializer" />
        <property name="valueSerializer" ref="stringRedisSerializer"/>
        <property name="hashValueSerializer" ref="stringRedisSerializer"/>
    </bean>

    <bean id="bytesRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <!-- 序列化方法 -->
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="hashKeySerializer" ref="stringRedisSerializer" />
        <property name="valueSerializer" ref="bytesSerializer"/>
        <property name="hashValueSerializer" ref="bytesSerializer"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <!-- 序列化方法 -->
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="hashKeySerializer" ref="stringRedisSerializer" />
        <property name="valueSerializer" ref="jdkSerializer"/>
        <property name="hashValueSerializer" ref="jdkSerializer"/>
    </bean>

    <redisson:client id="redissonClient">
        <redisson:single-server
                address="redis://${redis.jedisConnectionFactory.host}:${redis.jedisConnectionFactory.port}"
                connection-pool-size="${redis.jedisPoolConfig.maxTotal}"
                password="${redis.jedisConnectionFactory.password}"
                database="${redis.jedisConnectionFactory.database}"
        />
    </redisson:client>
</beans>